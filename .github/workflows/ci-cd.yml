name: Deploy Frontend (Admin)

on:
  push:
    branches:
      - main  #  main 브랜치에 push하면 실행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Public IP   # 퍼블릭 IP 가져오기
        id: get_ip
        run: echo "RUNNER_IP=$(curl -s ifconfig.me)" >> $GITHUB_ENV

      - name: Authorize Runner IP in Security Group   # 보안 그룹에 런너 IP 추가
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${RUNNER_IP}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'ap-northeast-2'

      # Node.js & npm 설치 (Next.js 빌드)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 의존성 설치
      - name: Install dependencies
        run: npm ci

      # Next.js 빌드
      - name: Build Next.js
        run: npm run build

      # Docker 이미지 빌드
      - name: Build Docker Image
        run: |
          docker build -t yeoboya-lunch-admin:latest .

      # Docker Hub 로그인 (Docker Hub를 사용하면 필요)
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Docker Hub에 푸시
      - name: Push Docker Image to Docker Hub
        run: |
          docker tag yeoboya-lunch-admin:latest ${{ secrets.DOCKER_USERNAME }}/yeoboya-lunch-admin:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/yeoboya-lunch-admin:latest

      # AWS EC2 서버에 배포 (SSH 접속)
      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/yeoboya-lunch-admin:latest
            docker stop admin_container || true
            docker rm admin_container || true
            docker run -d --name admin_container --network yeoboya_lunch_network -p 3001:3001 ${{ secrets.DOCKER_USERNAME }}/yeoboya-lunch-admin:latest
            docker system prune -f
            

      - name: Remove Runner IP from Security Group   # 보안 그룹에서 런너 IP 제거
        if: always()   # 이전 단계 실패 여부와 관계없이 항상 실행
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${RUNNER_IP}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'ap-northeast-2'